// Code generated by github.com/jmattheis/goverter, DO NOT EDIT.
//go:build !goverter

package convert

import (
	v1 "buf.build/gen/go/wanho/security-proof-api/protocolbuffers/go/api/v1"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	model "security-proof/internal/db/security_proof/proof/model"
	"time"
)

type ServiceConverterImpl struct{}

func (c *ServiceConverterImpl) ModelToProto(source *model.Proof) *v1.Proof {
	var pApiv1Proof *v1.Proof
	if source != nil {
		var apiv1Proof v1.Proof
		apiv1Proof.Idx = (*source).Idx
		apiv1Proof.Num = PStringToString((*source).Num)
		apiv1Proof.Category = (*source).Category
		apiv1Proof.Description = (*source).Description
		apiv1Proof.FirstImagePath = PStringToString((*source).FirstImagePath)
		apiv1Proof.SecondImagePath = PStringToString((*source).SecondImagePath)
		apiv1Proof.LogPath = PStringToString((*source).LogPath)
		apiv1Proof.CreatedUserIdx = Pint32ToInt32((*source).CreatedUserIdx)
		apiv1Proof.CreatedAt = TimeToPTimestamppb((*source).CreatedAt)
		apiv1Proof.UpdatedUserIdx = Pint32ToInt32((*source).UpdatedUserIdx)
		apiv1Proof.UpdatedAt = c.pTimeTimeToPTimestamppbTimestamp((*source).UpdatedAt)
		apiv1Proof.UploadedUserIdx = Pint32ToInt32((*source).UploadedUserIdx)
		apiv1Proof.UploadedAt = c.pTimeTimeToPTimestamppbTimestamp((*source).UploadedAt)
		apiv1Proof.Confirm = (*source).Confirm
		apiv1Proof.TokenId = Pint32ToInt32((*source).TokenID)
		pApiv1Proof = &apiv1Proof
	}
	return pApiv1Proof
}
func (c *ServiceConverterImpl) ProtoToModel(source *v1.Proof) *model.Proof {
	var pModelProof *model.Proof
	if source != nil {
		var modelProof model.Proof
		modelProof.Idx = (*source).Idx
		modelProof.Category = (*source).Category
		modelProof.Description = (*source).Description
		pString := (*source).FirstImagePath
		modelProof.FirstImagePath = &pString
		pString2 := (*source).SecondImagePath
		modelProof.SecondImagePath = &pString2
		pString3 := (*source).LogPath
		modelProof.LogPath = &pString3
		pInt32 := (*source).CreatedUserIdx
		modelProof.CreatedUserIdx = &pInt32
		modelProof.CreatedAt = TimestampppbToTime((*source).CreatedAt)
		pInt322 := (*source).UpdatedUserIdx
		modelProof.UpdatedUserIdx = &pInt322
		modelProof.UpdatedAt = TimestampppbToPTime((*source).UpdatedAt)
		pInt323 := (*source).UploadedUserIdx
		modelProof.UploadedUserIdx = &pInt323
		modelProof.UploadedAt = TimestampppbToPTime((*source).UploadedAt)
		modelProof.Confirm = (*source).Confirm
		pString4 := (*source).Num
		modelProof.Num = &pString4
		pInt324 := (*source).TokenId
		modelProof.TokenID = &pInt324
		pModelProof = &modelProof
	}
	return pModelProof
}
func (c *ServiceConverterImpl) pTimeTimeToPTimestamppbTimestamp(source *time.Time) *timestamppb.Timestamp {
	var pTimestamppbTimestamp *timestamppb.Timestamp
	if source != nil {
		timestamppbTimestamp := TimeToTimestamppb((*source))
		pTimestamppbTimestamp = &timestamppbTimestamp
	}
	return pTimestamppbTimestamp
}
