// Code generated by github.com/jmattheis/goverter, DO NOT EDIT.
//go:build !goverter

package convert

import (
	v1 "buf.build/gen/go/wanho/security-proof-api/protocolbuffers/go/api/v1"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	model "security-proof/internal/db/security_proof/proof/model"
	"time"
)

type ServiceConverterImpl struct{}

func (c *ServiceConverterImpl) ModelToNotConfirmProto(source *model.Proof) *v1.NotConfirmProof {
	var pApiv1NotConfirmProof *v1.NotConfirmProof
	if source != nil {
		var apiv1NotConfirmProof v1.NotConfirmProof
		apiv1NotConfirmProof.Idx = (*source).Idx
		apiv1NotConfirmProof.Num = PStringToString((*source).Num)
		apiv1NotConfirmProof.Category = (*source).Category
		apiv1NotConfirmProof.CreatedUserIdx = Pint32ToInt32((*source).CreatedUserIdx)
		apiv1NotConfirmProof.CreatedAt = TimeToPTimestamppb((*source).CreatedAt)
		apiv1NotConfirmProof.UpdatedUserIdx = Pint32ToInt32((*source).UpdatedUserIdx)
		apiv1NotConfirmProof.UpdatedAt = c.pTimeTimeToPTimestamppbTimestamp((*source).UpdatedAt)
		apiv1NotConfirmProof.UploadedUserIdx = Pint32ToInt32((*source).UploadedUserIdx)
		apiv1NotConfirmProof.UploadedAt = c.pTimeTimeToPTimestamppbTimestamp((*source).UploadedAt)
		pApiv1NotConfirmProof = &apiv1NotConfirmProof
	}
	return pApiv1NotConfirmProof
}
func (c *ServiceConverterImpl) ModelToNotUploadProto(source *model.Proof) *v1.NotUploadProof {
	var pApiv1NotUploadProof *v1.NotUploadProof
	if source != nil {
		var apiv1NotUploadProof v1.NotUploadProof
		apiv1NotUploadProof.Idx = (*source).Idx
		apiv1NotUploadProof.Num = PStringToString((*source).Num)
		apiv1NotUploadProof.Category = (*source).Category
		apiv1NotUploadProof.CreatedUserIdx = Pint32ToInt32((*source).CreatedUserIdx)
		apiv1NotUploadProof.CreatedAt = TimeToPTimestamppb((*source).CreatedAt)
		apiv1NotUploadProof.UpdatedUserIdx = Pint32ToInt32((*source).UpdatedUserIdx)
		apiv1NotUploadProof.UpdatedAt = c.pTimeTimeToPTimestamppbTimestamp((*source).UpdatedAt)
		apiv1NotUploadProof.UploadedUserIdx = Pint32ToInt32((*source).UploadedUserIdx)
		pApiv1NotUploadProof = &apiv1NotUploadProof
	}
	return pApiv1NotUploadProof
}
func (c *ServiceConverterImpl) pTimeTimeToPTimestamppbTimestamp(source *time.Time) *timestamppb.Timestamp {
	var pTimestamppbTimestamp *timestamppb.Timestamp
	if source != nil {
		timestamppbTimestamp := TimeToTimestamppb((*source))
		pTimestamppbTimestamp = &timestamppbTimestamp
	}
	return pTimestamppbTimestamp
}
